{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","onSubmit","e","preventDefault","addTodo","className","value","onChange","target","placeholder","type","TodoItem","todo","removeTodo","completeTodo","importantTodo","completed","style","important","background","text","onClick","id","marginRight","App","todos","setTodos","updatedTodos","filter","map","sortedTodos","sort","a","b","length","newTodos","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGe,SAASA,EAASC,GAC/B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,EAAMO,QAAQL,GACdC,EAAS,KAIqBK,UAAU,aACtC,2BACEC,MAAOP,EACPQ,SAAU,SAACL,GAAD,OAAOF,EAASE,EAAEM,OAAOF,QACnCD,UAAU,aACVI,YAAY,eAEd,4BAAQC,KAAK,SAASL,UAAU,eAAhC,a,kBChBS,SAASM,EAASd,GAC7B,IAAQe,EAAkDf,EAAlDe,KAAMC,EAA4ChB,EAA5CgB,WAAYC,EAAgCjB,EAAhCiB,aAAcC,EAAkBlB,EAAlBkB,cACxC,OACI,yBAAKV,UAAWO,EAAKI,UAAY,oBAAsB,WAAYC,MAAOL,EAAKM,UAAY,CAAEC,WAAY,UAAa,IACjHP,EAAKQ,KACN,yBAAKf,UAAU,kBACX,4BAAQgB,QAAS,kBAAMN,EAAcH,EAAKU,KAAKjB,UAAU,iBAAzD,KACA,kBAAC,IAAD,CAAmBY,MAAO,CAAEM,YAAa,GAAKF,QAAS,kBAAMR,EAAWD,EAAKU,OAC7E,kBAAC,IAAD,CAAeD,QAAS,kBAAMP,EAAaF,EAAKU,SC8CjDE,MArDf,WACE,MAA0B1B,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAYMb,EAAa,SAACS,GAClB,IAAIK,EAAe,YAAIF,GAAOG,QAAO,SAAChB,GAAD,OAAUA,EAAKU,KAAOA,KAC3DI,EAASC,IAGLb,EAAe,SAACQ,GACpB,IAAIK,EAAeF,EAAMI,KAAI,SAACjB,GAI5B,OAHGA,EAAKU,KAAOA,IACbV,EAAKI,WAAaJ,EAAKI,WAElBJ,KAETc,EAASC,IAGLZ,EAAgB,SAACO,GACrB,IAAIK,EAAeF,EAAMI,KAAI,SAACjB,GAI5B,OAHGA,EAAKU,KAAOA,IACbV,EAAKM,WAAaN,EAAKM,WAElBN,KAGTc,EAASC,IAEPG,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEf,UAAYc,EAAEd,aACvD,OACE,yBAAKb,UAAU,YACb,yCACA,kBAACT,EAAD,CAAUQ,QAvCE,SAACgB,GACf,IAAIE,EAAK,EACNG,EAAMS,OAAS,IAChBZ,EAAKG,EAAM,GAAGH,GAAK,GAErB,IACIa,EAAQ,CADD,CAACb,GAAIA,EAAIF,KAAMA,EAAMJ,WAAW,EAAOE,WAAW,IACjD,mBAAaO,IACzBC,EAASS,MAiCP,wBAAI9B,UAAU,cACbyB,EAAYD,KAAI,SAACjB,GAChB,OACE,kBAACD,EAAD,CAAUE,WAAYA,EAAYC,aAAcA,EAAcC,cAAeA,EAAeH,KAAMA,EAAMwB,IAAKxB,EAAKU,UC/C5He,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.07d48e90.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n\nexport default function TodoForm(props) {\n  const [input, setInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.addTodo(input)\n    setInput(\"\")\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"Add a todo\"\n      />\n      <button type=\"submit\" className=\"todo-button\">Add Todo</button>\n    </form>\n  );\n}\n","import React from 'react'\nimport { RiCloseCircleLine } from \"react-icons/ri\"\nimport { BiCheckCircle } from \"react-icons/bi\"\n\nexport default function TodoItem(props) {\n    const { todo, removeTodo, completeTodo, importantTodo } = props\n    return (\n        <div className={todo.completed ? \"todo-row complete\" : \"todo-row\"} style={todo.important ? { background: \"orange\" } : {}}>\n            {todo.text}\n            <div className=\"iconsContainer\">\n                <button onClick={() => importantTodo(todo.id)} className=\"important-btn\">!</button>\n                <RiCloseCircleLine style={{ marginRight: 5 }} onClick={() => removeTodo(todo.id)}/>\n                <BiCheckCircle onClick={() => completeTodo(todo.id)}/>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoItem from \"./components/TodoItem\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (text) => {\n    let id = 1;\n    if(todos.length > 0) {\n      id = todos[0].id + 1\n    }\n    let todo = {id: id, text: text, completed: false, important: false}\n    let newTodos = [todo, ...todos]\n    setTodos(newTodos)\n  };\n\n  const removeTodo = (id) => {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  const importantTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if(todo.id === id) {\n        todo.important = !todo.important\n      }\n      return todo\n    })\n\n    setTodos(updatedTodos)\n  }\n  let sortedTodos = todos.sort((a, b) => b.important - a.important)\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo List</h1>\n      <TodoForm addTodo={addTodo} />\n      <hr className=\"seperator\"/>\n      {sortedTodos.map((todo) => {\n        return (\n          <TodoItem removeTodo={removeTodo} completeTodo={completeTodo} importantTodo={importantTodo} todo={todo} key={todo.id}/>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}